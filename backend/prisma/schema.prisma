generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  email     String @unique
  name      String
  password  String

  latitude  Float?
  longitude Float?

  isAdmin   Boolean @default(false)
  points    Int     @default(0)

  shoppingList       UserShoppingList[]
  reviews            ReviewMarket[]
  completedPurchases Purchase[]
  purchasedProducts  PurchasedProduct[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id           String  @id @default(uuid())
  name         String  @unique
  description  String?
  imageUrl     String?
  isValid      Boolean @default(false)

  marketProducts    MarketProduct[]
  purchasedProducts PurchasedProduct[]
  userShoppingList  UserShoppingList[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Market {
    id        String @id @default(uuid())
    name      String
    latitude  Float
    longitude Float

    products          MarketProduct[]
    reviews           ReviewMarket[]
    purchasedProducts PurchasedProduct[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MarketProduct {
    id        String @id @default(uuid())
    marketId  String
    productId String
    price     Float
    lastPrice Float?
    isValid   Boolean @default(false)

    market    Market @relation(fields: [marketId], references: [id])
    product   Product @relation(fields: [productId], references: [id])

    @@unique([marketId, productId])
}

model ReviewMarket {
    id        String @id @default(uuid())
    userId    String
    marketId  String
    rating    Int
    comment   String?

    user      User @relation(fields: [userId], references: [id])
    market    Market @relation(fields: [marketId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([userId, marketId])
}

model PurchasedProduct {
    id         String @id @default(uuid())
    userId     String
    productId  String
    marketId   String
    purchaseId String
    price      Float

    user      User @relation(fields: [userId], references: [id])
    product   Product @relation(fields: [productId], references: [id])
    market    Market @relation(fields: [marketId], references: [id])
    purchase  Purchase @relation(fields: [purchaseId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Purchase {
    id        String @id @default(uuid())
    userId    String
    totalPrice Float

    user      User @relation(fields: [userId], references: [id])
    products  PurchasedProduct[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model UserShoppingList {
    id        String @id @default(uuid())
    userId    String
    productId String

    user      User @relation(fields: [userId], references: [id])
    product   Product @relation(fields: [productId], references: [id])

    createdAt DateTime @default(now())

    @@unique([userId, productId])
}